#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Процедура Заполнить()  Экспорт
	
	Данные.Очистить();
	
	Генератор = Новый ГенераторСлучайныхЧисел();
	
	Для Индекс = 1 По КоличествоСтрок Цикл
		
		НоваяСтрока = Данные.Добавить();
		НоваяСтрока.ДлительностьПаузы = Генератор.СлучайноеЧисло(1, МаксимальнаяДлительностьПаузы);
		НоваяСтрока.ПроцентОтказа     = ПроцентОтказа;
		НоваяСтрока.Таймаут           = ТаймаутЗапроса;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура Запустить() Экспорт
	
	ВремяНачала         = ТекущаяДатаСеанса();
	РезультатВыполнения = Неопределено;
	
	ТаблицаПараметров = Данные.Выгрузить(, "ДлительностьПаузы, ПроцентОтказа, Таймаут, Пошалить");
	
	ОтчетОРаботе = Неопределено;
	
	МассивСтруктурПараметров = хе_Многопоточка.ПреобразоватьВМассивСтруктур(ТаблицаПараметров);

	РезультатВыполнения = хе_Многопоточка.Запустить(ПутьПроцедуры,
													ЭтоФункция,
													МассивСтруктурПараметров,
													КоличествоПотоков,
													ТаймаутФонового,
													РазмерПорции,
													10,
													2,,
													ОтчетОРаботе);	
	
	ОбщееВремяВыполнения = ТекущаяДатаСеанса() - ВремяНачала;
	
	// Обрабокта результата
	Результат.Очистить();
	МаксИндекс = 0;
	Для Каждого Строка Из РезультатВыполнения Цикл
		МаксИндекс = Макс(Строка.ИсходныйИндекс);
	КонецЦикла;
	Для Индекс = 0 По МаксИндекс Цикл
		Результат.Добавить();
	КонецЦикла;
	
	// Кастомизировано под результат выполнения функции хе_Тестовые.ОтветGetЗапроса
	Для Каждого Строка Из РезультатВыполнения Цикл
		
		НоваяСтрока                   = Результат[Строка.ИсходныйИндекс];
		
		НоваяСтрока.ВремяВыполнения   = Строка.ВремяВыполнения;
		НоваяСтрока.Попытки           = Строка.Попытки;
		
		ПустьПроцедурыОбработки = СтрШаблон("%1(%2, %3)", ПутьПроцедурыОбработкиСтрокиРезультата, "НоваяСтрока", "Строка");
		Выполнить ПустьПроцедурыОбработки;
			
	КонецЦикла;
	
	ОтчетОПотоках.Загрузить(ОтчетОРаботе);
	
КонецПроцедуры

Функция СпособыОбработки() Экспорт
	
	Способы = Новый Соответствие;
	
	Способы.Вставить("ПрямойЗапуск", "Прямой запуск");
	Способы.Вставить("Основной", "Основной");
	Способы.Вставить("Простой", "Простой");
	Способы.Вставить("ПростойПлюс", "Простой+");
	Способы.Вставить("ХранениеБД", "Простой+");
	
	Возврат Способы;	
		
КонецФункции

Функция СпособыОбработкиСущевствует(Способ) Экспорт
	
	Возврат СпособыОбработки().Получить(Способ) <> Неопределено;	
	
КонецФункции

#КонецОбласти
	
#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли